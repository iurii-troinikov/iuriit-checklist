nelmio_api_doc:
  documentation:
    info:
      title: Iuriit Checklist
      description: You todos can stored here
      version: 0.1.0
    securityDefinitions:
      Bearer:
        type: apiKey
        description: 'Value: Bearer {token}'
        name: Authorization
        in: header
    security:
      - Bearer: []
    paths:
      /api/login_check:
        post:
          description: User Authentication
          tags:
            - Authentication
          produces:
            - application/json
          security: []
          parameters:
            - name: Credentials
              description: User credentials
              required: true
              in: body
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
          responses:
            '200':
              description: Success login
              schema:
                type: object
                properties:
                  token:
                    type: string
            '401':
              description: Invalid credentials
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
      /api/user:
        post:
          description: User Registration
          security: []
          tags:
            - Authentication
          produces:
            - application/json
          parameters:
            - name: User details
              description: User credentials
              required: true
              in: body
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
          responses:
            '200':
              description: Success registration
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  role:
                    type: array
                    items:
                      type: string
            '400':
              description: Invalid data
              schema:
                type: object
                properties:
                  error:
                    type: string
        get:
          description: User List
          tags:
            - User
          produces:
            - application/json
          responses:
            '200':
              description: List of users
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    role:
                      type: array
                      items:
                        type: string
            '401':
              description: Access denied
              schema:
                type: object
                properties:
                  error:
                    type: string
      /api/checklist:
        post:
          description: Creating of checklist
          tags:
            - Checklist
          produces:
            - application/json
          parameters:
            - name: Checklist details
              description: Checklist details
              required: true
              in: body
              schema:
                type: object
                properties:
                  name:
                    type: string
          responses:
            '200':
              description: Created Checklist
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
            '400':
              description: Bad request
              schema:
                type: object
                properties:
                  error:
                    type: string
            '401':
              description: Access denied
              schema:
                type: object
                properties:
                  error:
                    type: string
        get:
          description: Get Checklists
          tags:
            - Checklist
          produces:
            - application/json
          responses:
            '200':
              description: List of Checklists
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
            '400':
              description: Bad request
              schema:
                type: object
                properties:
                  error:
                    type: string
            '401':
              description: Access denied
              schema:
                type: object
                properties:
                  error:
                    type: string
  #      /api/checklist/{id}:
  #        delete:
  #          description: Delete checklist
  #          tags:
  #            - Checklist
  #          produces:
  #            - application/json
  #          parameters:
  #            - name: Checklist id
  #              description: Id of checklist to delete
  #              required: true
  #              in: path
  #          responses:
  #            '200':
  #              description: Checklist was deleted
  #            '401':
  #              description: Access denied
  #              schema:
  #                type: object
  #                properties:
  #                  error:
  #                    type: string
  #            '404':
  #              description: Checklist not found
  #              schema:
  #                type: object
  #                properties:
  #                  error:
  #                    type: string

  areas: # to filter documented areas
    path_patterns:
      - ^/api(?!/doc$)
    host_patterns:
      - ^api\.